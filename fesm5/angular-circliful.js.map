{"version":3,"file":"angular-circliful.js","sources":["ng://angular-circliful/lib/service/circle.service.ts","ng://angular-circliful/lib/angular-circliful.component.ts","ng://angular-circliful/lib/service/style.service.ts","ng://angular-circliful/lib/svg-container/svg-container.component.ts","ng://angular-circliful/lib/angular-circliful.module.ts","ng://angular-circliful/public-api.ts","ng://angular-circliful/angular-circliful.ts"],"sourcesContent":["import {ICalculationParams} from '../interface/icalculation-params';\nimport {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {ICircle} from '../interface/icircle';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CircleService {\n  public circleValues = new BehaviorSubject<ICircle>({percent: {value: 60, color: 'blue'}});\n\n  /**\n   * @description For easier handling polar coordinates are used and converted to cartesian coordinates\n   * @returns object\n   */\n  private static polarToCartesian(\n    centerX: number,\n    centerY: number,\n    radius: number,\n    angleInDegrees: number,\n  ): ICalculationParams {\n    const angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n\n    return {\n      x: centerX + radius * Math.cos(angleInRadians),\n      y: centerY + radius * Math.sin(angleInRadians),\n    };\n  }\n\n  /**\n   * @description Returns the string for the data attribute in the path tag\n   * @returns string\n   */\n  public describeArc(maxSize: number, startAngle: number, endAngle: number): string {\n    const x = maxSize / 2;\n    const y = maxSize / 2;\n    const radius = maxSize / 2.2;\n    endAngle = endAngle ? endAngle : 360;\n    const start = CircleService.polarToCartesian(x, y, radius, endAngle);\n    const end = CircleService.polarToCartesian(x, y, radius, startAngle);\n    const largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\n    let closePath = false;\n\n    if (endAngle === 360 && end.x > start.x) {\n      closePath = true;\n      start.x = start.x - 0.001;\n    }\n\n    return [\n      'M', start.x, start.y,\n      'A', radius, radius, 0, largeArcFlag, 0, end.x, end.y, (closePath ? 'Z' : ''),\n    ].join(' ');\n  }\n\n  public updateCircleValues(circleValues: ICircle): void {\n    this.circleValues.next(circleValues);\n  }\n}\n","import {Component, Input, OnChanges, ViewEncapsulation} from '@angular/core';\nimport {IGradient} from './interface/igradient';\nimport {IElements} from './interface/ielements';\nimport {IPercent} from './interface/ipercent';\nimport {IBackgroundCircle} from './interface/ibackground-circle';\nimport {IText} from './interface/itext';\nimport {Icon} from './interface/icon';\nimport {IPoint} from './interface/ipoint';\nimport {IProgressColor} from './interface/iprogress-color';\nimport {CircleService} from './service/circle.service';\nimport {ICircle} from './interface/icircle';\n\n@Component({\n  selector: 'ac-angular-circliful',\n  templateUrl: './angular-circliful.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class AngularCirclifulComponent implements OnChanges {\n  @Input() percent: IPercent;\n  @Input() color: string;\n  @Input() gradient: IGradient;\n  @Input() strokeWidth: number;\n  @Input() strokeLinecap: string;\n  @Input() progressColors: IProgressColor[];\n  @Input() animate: boolean;\n  @Input() animateInView: boolean;\n  @Input() angle: {start: number, end: number};\n\n  @Input() backgroundCircle: IBackgroundCircle;\n  @Input() icon: Icon;\n  @Input() text: IText;\n  @Input() point: IPoint;\n\n  @Input() customClasses: IElements;\n\n  constructor(private circleService: CircleService) { }\n\n  ngOnChanges(): void {\n    const customClasses = typeof this.customClasses === 'undefined' ? {} : this.customClasses;\n    const circleValues: ICircle =  {\n      percent: this.percent,\n      color: this.color,\n      strokeWidth: this.strokeWidth,\n      strokeLinecap: this.strokeLinecap,\n      progressColors: this.progressColors,\n      animate: this.animate,\n      animateInView: this.animateInView,\n      backgroundCircle: this.backgroundCircle,\n      customClasses,\n      angle: this.angle\n    };\n\n    if (this.gradient && this.gradient.startColor && this.gradient.endColor) {\n      circleValues.gradient = this.gradient;\n    }\n\n    if (this.icon && this.icon.iconClass) {\n      circleValues.icon = this.icon;\n    }\n\n    if (this.text && this.text.content) {\n      circleValues.text = this.text;\n    }\n\n    if (this.point && this.point.color) {\n      circleValues.point = this.point;\n    }\n\n    this.circleService.updateCircleValues(circleValues);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {ICalculationParams} from '../interface/icalculation-params';\nimport {IProgressColor} from '../interface/iprogress-color';\nimport {CircleService} from './circle.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StyleService {\n\n  constructor(private circleService: CircleService) { }\n\n  private static getMilliseconds(defaultMs: number, endAngleGrade: number) {\n    let ms = defaultMs ? defaultMs : 50;\n\n    if (endAngleGrade <= 180) {\n      ms = ms / 3;\n    }\n\n    return ms;\n  }\n\n  private static setAttributes(element: Element, attributes: {style?: string, d?: string}): void {\n    for (const [key, value] of Object.entries(attributes)) {\n      element.setAttribute(key, value);\n    }\n  }\n\n  private static removeAttribute(element: Element, attributeName: string): void {\n    element.removeAttribute(attributeName);\n  }\n\n  /**\n   * @description Redraws the arc (circle) border\n   */\n  public animateArc(\n    params: {\n      arc: Element,\n      arcParams: ICalculationParams,\n      maxSize: number,\n      progressColors?: IProgressColor[]\n    }\n  ): void {\n    const {arc, arcParams, progressColors} = params;\n    const startAngle = 0;\n    const endAngleGrade = 360;\n    const ms = StyleService.getMilliseconds(arcParams.ms, arcParams.endAngleGrade);\n    const hasProgressColor = Array.isArray(progressColors) && progressColors.length > 0;\n\n    StyleService.removeAttribute(arc, 'style');\n\n    let count = 1;\n    const interval = setInterval(() => {\n      const endAngle = endAngleGrade / 100 * count;\n      StyleService.setAttributes(arc, {\n        d:  this.circleService.describeArc(params.maxSize, startAngle, endAngle),\n      });\n\n      if (hasProgressColor) {\n        this.updateCircleColor(count, arc, progressColors);\n      }\n\n      count++;\n\n      if (count > arcParams.percent) {\n        clearInterval(interval);\n      }\n    }, ms);\n  }\n\n  /**\n   * @description If options.progressColors is set, colors are changed on given percentages\n   */\n  public updateCircleColor(actualCount: number, arc: Element, progressColors: IProgressColor[]) {\n    const progressColor = progressColors.find((progress: IProgressColor) => progress.percent === actualCount);\n    if (progressColor) {\n      StyleService.setAttributes(arc, {\n        style: `stroke: ${progressColor.color}`,\n      });\n    } else if (typeof progressColor !== 'undefined' && progressColor.percent < actualCount) {\n      StyleService.removeAttribute(arc, 'style');\n    }\n  }\n\n  public isElementInViewport(circleContainer: HTMLElement): boolean {\n    const offsetTop = circleContainer.offsetTop;\n    const scrollPositionTop = window.scrollY;\n    const windowHeight = window.innerHeight;\n\n    return scrollPositionTop < offsetTop && scrollPositionTop + windowHeight > offsetTop;\n  }\n}\n","import {Component, ElementRef, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {CircleService} from '../service/circle.service';\nimport {ChangeDetectorRef} from '@angular/core';\nimport {StyleService} from '../service/style.service';\nimport {ISize} from '../interface/isize';\nimport {ICircle} from '../interface/icircle';\n\n@Component({\n  selector: 'ac-svg-container',\n  templateUrl: './svg-container.component.html',\n  styleUrls: ['./svg-container.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SvgContainerComponent implements OnInit {\n  @ViewChild('svgContainer') svgContainer: ElementRef;\n\n  public arcData: string;\n  public viewBox: string;\n  public coordinates = {x: 0, y: 0};\n  public radius = 0;\n  public backgroundCircleColor = '#333';\n  public backgroundCircleWidth = 10;\n  public textPosition = 'middle';\n  public circleValues: ICircle;\n\n  private size: ISize;\n\n  constructor(\n    private circleService: CircleService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private styleService: StyleService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.circleService.circleValues.subscribe((circleValues: ICircle) => {\n      this.circleValues = circleValues;\n      this.size = {\n        height: 200,\n        maxSize: 200,\n        width: 200\n      };\n      this.updatePercent();\n      this.animateCircle();\n      this.animateCircleInView();\n    });\n  }\n\n  updatePercent(): void {\n    const percent = this.circleValues.percent.value;\n    const endAngle = (this.circleValues.angle?.end ?? 360) / 100 * percent;\n    const startAngle = (this.circleValues.angle?.start ?? 0);\n    this.viewBox = `0 0 ${this.size.width} ${this.size.height}`;\n    this.coordinates = {\n      x: this.size.maxSize / 2,\n      y: this.size.maxSize / 2,\n    };\n    this.radius = this.size.maxSize / 2.2;\n\n    this.arcData = this.circleService.describeArc(\n      this.size.maxSize,\n      startAngle,\n      endAngle,\n    );\n    this.changeDetectorRef.detectChanges();\n  }\n\n  animateCircle(): void {\n    const pathElements = this.svgContainer.nativeElement.getElementsByTagName('path');\n    if (this.circleValues.animate) {\n      this.styleService.animateArc({\n        arc: pathElements[0],\n        arcParams: {\n          percent: this.circleValues.percent.value,\n          x: this.coordinates.x,\n          y: this.coordinates.y,\n          radius: this.radius\n        },\n        maxSize: this.size.maxSize,\n        progressColors: this.circleValues.progressColors\n      });\n    }\n  }\n\n  animateCircleInView(): void {\n    if (this.circleValues.animateInView) {\n      window.addEventListener('scroll', () => {\n        this.checkAnimation();\n      });\n    }\n  }\n\n  checkAnimation(): void {\n    const circleContainer = this.svgContainer.nativeElement.parentElement;\n    const inView = this.styleService.isElementInViewport(circleContainer);\n\n    if (!circleContainer.classList.contains('reanimated') && inView) {\n      circleContainer.classList.add('reanimated');\n      setTimeout(() => this.animateCircle(), 250);\n    }\n  }\n}\n","import {NgModule, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {AngularCirclifulComponent} from './angular-circliful.component';\nimport {CommonModule} from '@angular/common';\nimport { SvgContainerComponent } from './svg-container/svg-container.component';\n\n\n@NgModule({\n  declarations: [\n    AngularCirclifulComponent,\n    SvgContainerComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [AngularCirclifulComponent],\n  schemas: [NO_ERRORS_SCHEMA],\n})\nexport class AngularCirclifulModule {}\n","/*\n * Public API Surface of angular-circliful\n */\n\nexport * from './lib/angular-circliful.component';\nexport * from './lib/angular-circliful.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {CircleService as ɵa} from './lib/service/circle.service';\nexport {StyleService as ɵc} from './lib/service/style.service';\nexport {SvgContainerComponent as ɵb} from './lib/svg-container/svg-container.component';"],"names":[],"mappings":"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"}